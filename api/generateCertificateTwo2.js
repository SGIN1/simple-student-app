// C:\wamp64\www\simple-student-app\api\generateCertificateTwo2.js

import { MongoClient, ObjectId } from 'mongodb';
import sharp from 'sharp'; // Sharp ูุง ูุฒุงู ูุทููุจูุง ูุชุญููู ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ ูุชุฑููุจ ุงููุตูุต
import path from 'path';
import fs from 'fs/promises'; // ุงุณุชุฎุฏู fs.promises ูุถูุงู async/await
import { fileURLToPath } from 'url';

// ุงุณุชูุฑุงุฏ ุงูุฏูุงู ุงูุฌุฏูุฏุฉ ูู imageUtils.js
import { registerArabicFonts, generateCertificateWithArabicText, ARABIC_FONTS } from '../../utils/imageUtils.js';

// ุชุญุฏูุฏ __dirname ู __filename ุจุดูู ุตุญูุญ ูู ES Modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const uri = process.env.MONGODB_URI;
const dbName = 'Cluster0';
const collectionName = 'enrolled_students_tbl';

// ุชุฃูุฏ ุฃู ูุฐุง ูู ุงููุณุงุฑ ุงูุตุญูุญ ูุตูุฑุฉ ุงูุดูุงุฏุฉ ูู ูุฌูุฏ public
const CERTIFICATE_IMAGE_PATH = path.join(process.cwd(), 'public', 'images', 'full', 'wwee.jpg');

const RED_COLOR_HEX = '#FF0000'; // ูุซุงู ูููู

// ุงูููุงูุน ูุงููุตูุต ุงููุฑุงุฏ ุฅุถุงูุชูุง ููุดูุงุฏุฉ
// ููุงุญุธุฉ: ูุน ุงุณุชุฎุฏุงู Canvasุ ุงูููุถุน (y) ููุง ุณูููู ูู ุงูููุถุน ุงูููู ููุชูุฉ ุงููุต ุนูู ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉุ
// ูููุณ ููุถุน ูู ุณุทุฑ ุฏุงุฎู ุงูู SVG ููุง ูุงู ุณุงุจููุง.
const CERTIFICATE_TEXT_POSITIONS = {
    STUDENT_NAME: {
        text: "ุงุณู ุงูุทุงูุจ: ", // ุณูุชู ุฏูุฌ ุงุณู ุงูุทุงูุจ ููุง
        y: 400, // ูุซุงู ูููุถุน ุงุณู ุงูุทุงูุจ
        fontSize: 45,
        color: "#000000", // ููู ุฏุงูู
    },
    COURSE_NAME: {
        text: "ุงูุฏูุฑุฉ: ", // ุณูุชู ุฏูุฌ ุงุณู ุงูุฏูุฑุฉ ููุง
        y: 500, // ูุซุงู ูููุถุน ุงุณู ุงูุฏูุฑุฉ
        fontSize: 35,
        color: "#000000",
    },
    WELCOME_MESSAGE: {
        text: "ุจูู ูุฎุฑ ููุฏู ูุฐู ุงูุดูุงุฏุฉ ููุทุงูุจ ุงููุชููุฒ:",
        y: 300, // ุฑุณุงูุฉ ุชุฑุญูุจ ูุจู ุงูุงุณู
        fontSize: 30,
        color: "#34495E", // ููู ุฃุฒุฑู ุฏุงูู
    },
    DATE_MESSAGE: {
        text: "ุจุชุงุฑูุฎ: " + new Date().toLocaleDateString('ar-SA'), // ุชุงุฑูุฎ ุงูููู
        y: 600, // ููุถุน ุงูุชุงุฑูุฎ
        fontSize: 25,
        color: "#555555",
    }
};

export default async function handler(req, res) {
    console.log('--- ุจุฏุฃ ุชูููุฐ ุฏุงูุฉ generateCertificateTwo2 (ุจุงุณุชุฎุฏุงู Canvas ูุชุฑููุจ ุงููุตูุต) ---');

    if (req.method !== 'GET') {
        console.log('ุทูุจ ุบูุฑ ูุณููุญ ุจู:', req.method);
        return res.status(405).json({ error: 'Method Not Allowed' });
    }

    const { id } = req.query;

    if (!id) {
        console.log('ูุนุฑู ุงูุทุงูุจ ุบูุฑ ููุฌูุฏ ูู ุงูุทูุจ.');
        return res.status(400).json({ error: 'ูุนุฑู ุงูุทุงูุจ (ID) ูุทููุจ.' });
    }

    let client;
    try {
        console.log('ุฌุงุฑู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');
        client = new MongoClient(uri);
        await client.connect();
        console.log('ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ.');

        const db = client.db(dbName);
        const collection = db.collection(collectionName);

        let student;
        try {
            const objectId = new ObjectId(id);
            student = await collection.findOne({ _id: objectId });
            console.log('ุชู ุงูุจุญุซ ุนู ุงูุทุงูุจ ุจุงุณุชุฎุฏุงู _id:', objectId);
        } catch (e) {
            console.error('ุฎุทุฃ ูู ุชุญููู ID ุฅูู ObjectId:', e.message);
            return res.status(400).json({ error: 'ููุนุฑูู ุงูุทุงูุจ ุบูุฑ ุตุงูุญ. ูุฌุจ ุฃู ูููู ObjectId ุตุญูุญูุง.' });
        }

        if (!student) {
            console.log('ูู ูุชู ุงูุนุซูุฑ ุนูู ุทุงูุจ ุจุงููุนุฑู:', id);
            return res.status(404).json({ error: 'ูู ูุชู ุงูุนุซูุฑ ุนูู ุทุงูุจ ุจูุฐุง ุงููุนุฑู.' });
        }
        console.log('ุชู ุฌูุจ ุจูุงูุงุช ุงูุทุงูุจ:', JSON.stringify(student, null, 2));

        // **ูุงู:** ุชุญูู ูู ูุฌูุฏ ุตูุฑุฉ ุงูุดูุงุฏุฉ ุงูุฃุณุงุณูุฉ
        console.log('ุฌุงุฑู ุงูุชุญูู ูู ุตูุฑุฉ ุงูุดูุงุฏุฉ ุงูุฃุณุงุณูุฉ...');
        try {
            await fs.access(CERTIFICATE_IMAGE_PATH);
            console.log('ุตูุฑุฉ ุงูุดูุงุฏุฉ ููุฌูุฏุฉ ูู ุงููุณุงุฑ:', CERTIFICATE_IMAGE_PATH);
        } catch (fileError) {
            console.error('ุฎุทุฃ: ุตูุฑุฉ ุงูุดูุงุฏุฉ ุบูุฑ ููุฌูุฏุฉ ุฃู ูุง ูููู ุงููุตูู ุฅูููุง:', fileError.message);
            return res.status(500).json({
                error: 'ุตูุฑุฉ ุงูุดูุงุฏุฉ ุงูุฃุณุงุณูุฉ ุบูุฑ ููุฌูุฏุฉ ุฃู ูุง ูููู ุงููุตูู ุฅูููุง. ูุฑุฌู ุงูุชุญูู ูู ูุณุงุฑ ููู ุงูุตูุฑุฉ.',
                details: fileError.message,
                path: CERTIFICATE_IMAGE_PATH
            });
        }

        // ูุฑุงุกุฉ ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ ูุฑุฉ ูุงุญุฏุฉ
        const baseImageBuffer = await sharp(CERTIFICATE_IMAGE_PATH).toBuffer();
        const metadata = await sharp(baseImageBuffer).metadata();
        const imageWidth = metadata.width;
        const imageHeight = metadata.height;
        console.log('ุฃุจุนุงุฏ ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ ุงูุชู ุชู ุชุญููููุง:', imageWidth, 'x', imageHeight);

        // ูู ุจุชุณุฌูู ุงูุฎุทูุท (ูููู ูุถุนูุง ููุง ุฃู ูู ููู imageUtils ููุณู)
        // registerArabicFonts(); // ูุฐู ุงูุฏุงูุฉ ูุชู ุงุณุชุฏุนุงุคูุง ุฏุงุฎู createArabicTextWithCanvas


        let processedImage = sharp(baseImageBuffer);
        const textBuffersToComposite = [];

        // ูุนุงูุฌุฉ ุงููุตูุต ูุชุฑููุจูุง
        // ููููู ุชุนุฏูู ูุฐู ุงูุฃูุซูุฉ ูุชูุงุณุจ ุชุตููู ุดูุงุฏุชู
        const textFields = [
            { key: 'WELCOME_MESSAGE', text: CERTIFICATE_TEXT_POSITIONS.WELCOME_MESSAGE.text },
            { key: 'STUDENT_NAME', text: `${CERTIFICATE_TEXT_POSITIONS.STUDENT_NAME.text}${student.name_arabic || 'ุบูุฑ ูุชููุฑ'}` },
            { key: 'COURSE_NAME', text: `${CERTIFICATE_TEXT_POSITIONS.COURSE_NAME.text}${student.course_name || 'ุบูุฑ ูุชููุฑ'}` },
            { key: 'DATE_MESSAGE', text: CERTIFICATE_TEXT_POSITIONS.DATE_MESSAGE.text }
        ];

        for (const field of textFields) {
            const pos = CERTIFICATE_TEXT_POSITIONS[field.key];
            if (pos) {
                console.log(`๐ ุฅูุดุงุก ูุต: "${field.text}" ูู ${field.key}`);

                // ุนุฑุถ ููุทูุฉ ุงููุต ุงูุงูุชุฑุงุถูุฉ
                const textRenderWidth = imageWidth; // ูููู ูููุต ุฃู ููุชุฏ ุนูู ุนุฑุถ ุงูุตูุฑุฉ
                const textRenderHeight = pos.fontSize * 2; // ุงุฑุชูุงุน ูุงูู ูููุต

                const textBuffer = await generateCertificateWithArabicText(
                    // ูุง ุชุญุชุงุฌ ู baseImagePath ููุง ูุฃููุง ูุณุชุฎุฏู createArabicTextWithCanvas ูุจุงุดุฑุฉ
                    // ูููููุง ููุฑุฑ ุงููุต ูุงูุฎูุงุฑุงุช
                    '', // ูุง ุชุญุชุงุฌ ููุณุงุฑ ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ ููุง
                    field.text,
                    {
                        fontSize: pos.fontSize,
                        fontFamily: ARABIC_FONTS.arial, // ุงุณุชุฎุฏู ุงูุฎุท ุงูุฐู ุณุฌููุงู
                        color: pos.color,
                        textWidth: textRenderWidth,
                        textHeight: textRenderHeight,
                        position: { left: 0, top: pos.y } // ุงูููุถุน ุงููุนูู ุณูุชู ุชุญุฏูุฏู ูุงุญููุง ูู composite
                    }
                );
                console.log(`โ ุชู ุฅูุดุงุก ุตูุฑุฉ ุงููุต ูู ${field.key}`);

                textBuffersToComposite.push({
                    input: textBuffer,
                    // position: { left: 0, top: pos.y } // ูุฐุง ููุณ ุงูููุถุน ุงูููุงุฆู ููู SVG
                    left: 0, // ูุถุน ุงูู buffer ูู ุฃูุตู ุงููุณุงุฑ
                    top: pos.y, // ููุถุน Y ุนูู ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ
                    // blend: 'overlay' // ุงุณุชุฎุฏู blend: 'over' ุฃู ูุง ุชุญุฏุฏูุง
                });
            }
        }

        // ุชุฑููุจ ุฌููุน ุตูุฑ ุงููุตูุต ุนูู ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ
        console.log('๐ ุฌุงุฑู ุชุฑููุจ ุฌููุน ุงููุตูุต ุนูู ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ...');
        processedImage = await sharp(baseImageBuffer).composite(textBuffersToComposite);
        console.log('โ ุชู ุชุฑููุจ ุฌููุน ุงููุตูุต.');

        console.log('ุฌุงุฑู ุฅูุดุงุก ุงูุตูุฑุฉ ุงูููุงุฆูุฉ...');
        const finalImageBuffer = await processedImage
            .flatten({ background: { r: 255, g: 255, b: 255, alpha: 1 } }) // ููุชุฃูุฏ ูู ุนุฏู ูุฌูุฏ ุดูุงููุฉ
            .jpeg({ quality: 85, progressive: true })
            .toBuffer();
        console.log('ุชู ุฅูุดุงุก ุงูุตูุฑุฉ ุงูููุงุฆูุฉ.');

        // ุฅุฑุณุงู ุงูุตูุฑุฉ ุงูููุงุฆูุฉ ูุงุณุชุฌุงุจุฉ
        res.setHeader('Content-Type', 'image/jpeg');
        res.setHeader('Cache-Control', 's-maxage=1, stale-while-revalidate');
        console.log('ุชู ุฅุฑุณุงู ุงูุตูุฑุฉ ุจูุฌุงุญ.');
        return res.status(200).send(finalImageBuffer);

    } catch (error) {
        console.error('โ ุฎุทุฃ ุนุงู ูู ูุธููุฉ generateCertificateTwo2:', error);
        console.error('โ ุชุชุจุน ุงูุฎุทุฃ:', error.stack);

        res.status(500).json({
            error: 'ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน ุฃุซูุงุก ูุนุงูุฌุฉ ุงูุดูุงุฏุฉ.',
            details: error.message,
            stack: process.env.NODE_ENV === 'development' ? error.stack : undefined
        });
    } finally {
        if (client) {
            await client.close();
            console.log('ุชู ุฅุบูุงู ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช.');
        }
    }
}